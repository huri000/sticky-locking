///
/// BasicTypeTests+XCTest.swift
///
/// Copyright 2017 Tony Stone
///
///  Licensed under the Apache License, Version 2.0 (the "License");
///  you may not use this file except in compliance with the License.
///  You may obtain a copy of the License at
///
///  http://www.apache.org/licenses/LICENSE-2.0
///
///  Unless required by applicable law or agreed to in writing, software
///  distributed under the License is distributed on an "AS IS" BASIS,
///  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
///  See the License for the specific language governing permissions and
///  limitations under the License.
///
///  Created by Tony Stone on 10/08/2017.
///
import XCTest

///
/// NOTE: This file was auto generated by file generate_xctest_linux_runner.rb.
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

#if os(Linux) || os(FreeBSD)

extension BasicClassTests {

   static var allTests: [(String, (BasicClassTests) -> () throws -> Void)] {
      return [
                ("testInitWithNoArguments", testInitWithNoArguments),
                ("testInitWithArguments", testInitWithArguments),
                ("testEqualWithNoArguments", testEqualWithNoArguments),
                ("testEqualWithArguments", testEqualWithArguments),
                ("testEqualDifferentBoolVar", testEqualDifferentBoolVar),
                ("testEqualDifferentIntVar", testEqualDifferentIntVar),
                ("testEqualDifferentDoubleVar", testEqualDifferentDoubleVar),
                ("testEqualDifferentStringVar", testEqualDifferentStringVar),
                ("testEncode", testEncode),
                ("testDecode", testDecode),
                ("testDescription", testDescription)
           ]
   }
}
extension BasicStructTests {

   static var allTests: [(String, (BasicStructTests) -> () throws -> Void)] {
      return [
                ("testInitWithNoArguments", testInitWithNoArguments),
                ("testInitWithArguments", testInitWithArguments),
                ("testEqualWithNoArguments", testEqualWithNoArguments),
                ("testEqualWithArguments", testEqualWithArguments),
                ("testEqualDifferentBoolVar", testEqualDifferentBoolVar),
                ("testEqualDifferentIntVar", testEqualDifferentIntVar),
                ("testEqualDifferentDoubleVar", testEqualDifferentDoubleVar),
                ("testEqualDifferentStringVar", testEqualDifferentStringVar),
                ("testEncode", testEncode),
                ("testDecode", testDecode),
                ("testDescription", testDescription)
           ]
   }
}

#endif
